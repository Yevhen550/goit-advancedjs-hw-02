{"version":3,"file":"1-timer.js","sources":["../src/js/convert-ms.js","../src/js/add-zero.js","../src/js/1-timer.js"],"sourcesContent":["export function convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n","export function addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n","import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport { convertMs } from './convert-ms';\nimport { addLeadingZero } from './add-zero';\n\nconst startBtn = document.querySelector('[data-start]');\nconst inputData = document.getElementById('datetime-picker');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n\n    if (userSelectedDate <= Date.now()) {\n      iziToast.warning({\n        title: 'Warning',\n        message: 'Please choose a date in the future',\n        position: 'topRight',\n      });\n    } else {\n      startBtn.disabled = false;\n      startBtn.addEventListener('click', onClickButton);\n    }\n  },\n};\n\nconst flatpickrObj = flatpickr(inputData, options);\n\nfunction onClickButton() {\n  setInterval(() => {\n    const userSelectedDate = flatpickrObj.selectedDates[0].getTime();\n    const { days, hours, minutes, seconds } = convertMs(\n      userSelectedDate - Date.now()\n    );\n\n    daysEl.textContent = addLeadingZero(days);\n    hoursEl.textContent = addLeadingZero(hours);\n    minutesEl.textContent = addLeadingZero(minutes);\n    secondsEl.textContent = addLeadingZero(seconds);\n  }, 1000);\n\n  startBtn.disabled = true;\n}\n\n"],"names":["convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","startBtn","inputData","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","options","selectedDates","iziToast","onClickButton","flatpickrObj","flatpickr"],"mappings":"+IAAO,SAASA,EAAUC,EAAI,CAQ5B,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CCjBO,SAASC,EAAeC,EAAO,CACpC,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CCGA,MAAMC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAY,SAAS,eAAe,iBAAiB,EACrDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EAEJN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAE9BF,GAAoB,KAAK,MAC3BG,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,qCACT,SAAU,UAClB,CAAO,GAEDT,EAAS,SAAW,GACpBA,EAAS,iBAAiB,QAASU,CAAa,EAEnD,CACH,EAEMC,EAAeC,EAAUX,EAAWM,CAAO,EAEjD,SAASG,GAAgB,CACvB,YAAY,IAAM,CAChB,MAAMJ,EAAmBK,EAAa,cAAc,CAAC,EAAE,QAAO,EACxD,CAAE,KAAAjB,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAS,EAAGL,EACxCc,EAAmB,KAAK,IAAK,CACnC,EAEIJ,EAAO,YAAcJ,EAAeJ,CAAI,EACxCS,EAAQ,YAAcL,EAAeH,CAAK,EAC1CS,EAAU,YAAcN,EAAeF,CAAO,EAC9CS,EAAU,YAAcP,EAAeD,CAAO,CAC/C,EAAE,GAAI,EAEPG,EAAS,SAAW,EACtB"}